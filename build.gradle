plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'io.mozmani'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql:42.2.26'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}

bootRun {
	systemProperties = System.properties
	systemProperty 'spring.profiles.active', findProperty('profile') ?: 'local'
}


def initLocalEnv = tasks.register('initLocalEnv') {
	doLast {
		File dockerEnvFile = project.file("${rootDir}/.env")
		if (!dockerEnvFile.exists()) {
			dockerEnvFile.write('DB_PASSWORD="' + (('0'..'9') + ('A'..'Z') + ('a'..'z')).shuffled().take(32).join() + '"')
		}
	}
}